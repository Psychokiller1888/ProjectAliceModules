variables:
  GIT_SUBMODULE_STRATEGY: recursive

skillValidation:
  stage: test
  except:
  - triggers
  image: python:slim-buster
  before_script:
  - python3 -m pip install --upgrade pip
  - pip3 install projectalice-sk
  script:
  - projectalice-sk validate --paths PublishedSkills/*/
  allow_failure: true


mypyValidation:
  stage: test
  except:
  - triggers
  image: python:slim-buster
  before_script:
  - python3 -m pip install --upgrade pip
  - pip3 install mypy
  script:
  - ./ci_sources/mypy.sh
  allow_failure: true


sonarqube-check:
  stage: test
  except:
  - triggers
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_TOKEN: $SONAR_TOKEN
    SONAR_HOST_URL: "https://sonarcloud.io"
    GIT_DEPTH: 0
  script:
    - sonar-scanner -Dsonar.qualitygate.wait=true -Dsonar.projectKey=project-alice-assistant_ProjectAliceSkills -Dsonar.organization=project-alice-assistant
  allow_failure: true


skillLinkValidation:
  stage: test
  except:
  - triggers
  image: python:slim-buster
  before_script:
  - python3 -m pip install --upgrade pip
  - pip3 install requests click
  script:
  - python3 ci_sources/skillLinkValidation.py
  allow_failure: true


store:deploy:
  stage: deploy
  image: python:slim-buster
  before_script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$SERVER_SSH_PRIV_KEY")
  - apt-get update -qq && apt-get install git -qq
  - python3 -m pip install --upgrade pip
  - pip3 install requests jinja2 gitpython
  script:
  - python3 ci_sources/store.py
  - ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $USERNAME@$DOMAIN "mkdir -p www/$DOMAIN/assets/store"
  - scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -rp store/* "$USERNAME@$DOMAIN:www/$DOMAIN/assets/store"
